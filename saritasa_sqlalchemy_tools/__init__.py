import contextlib

from .models import (
    BaseIDModel,
    BaseModel,
    BaseModelT,
    BaseSoftDeleteModel,
    BaseSoftDeleteModelT,
    BaseTimeStampedModel,
    FieldEnumT,
    M2MFilterConfig,
    ModelAttribute,
    ModelAttributeSequence,
    ModelType,
    SelectStatement,
    SoftDeleteBaseIDModel,
    SoftDeleteMixin,
    SQLAlchemyModel,
    TimeStampedBaseIDModel,
    TimeStampedMixin,
)
from .repositories import (
    Annotation,
    AnnotationSequence,
    BaseRepository,
    BaseRepositoryT,
    BaseSoftDeleteRepository,
    ComparisonOperator,
    Filter,
    FilterType,
    LazyLoaded,
    LazyLoadedSequence,
    OrderingClause,
    OrderingClauses,
    OrderingEnum,
    OrderingEnumMeta,
    SQLWhereFilter,
    SubQueryReturnT,
    WhereFilter,
    WhereFilters,
    transform_search_filter,
)
from .session import (
    Session,
    SessionFactory,
    get_async_db_session,
    get_async_db_session_context,
    get_async_engine,
    get_async_session_factory,
)

with contextlib.suppress(ImportError):
    from .testing import AsyncSQLAlchemyModelFactory, AsyncSQLAlchemyOptions

with contextlib.suppress(ImportError):
    from .alembic import AlembicMigrations

with contextlib.suppress(ImportError):
    from .auto_schema import (
        ModelAutoSchema,
        ModelAutoSchemaError,
        ModelAutoSchemaT,
    )

__all__ = (
    "AlembicMigrations",
    "AsyncSQLAlchemyModelFactory",
    "AsyncSQLAlchemyOptions",
    "Session",
    "SessionFactory",
    "get_async_db_session",
    "get_async_db_session_context",
    "get_async_engine",
    "get_async_session_factory",
    "Annotation",
    "AnnotationSequence",
    "BaseRepository",
    "BaseRepositoryT",
    "BaseSoftDeleteRepository",
    "ComparisonOperator",
    "Filter",
    "FilterType",
    "LazyLoaded",
    "LazyLoadedSequence",
    "OrderingClause",
    "OrderingClauses",
    "OrderingEnum",
    "OrderingEnumMeta",
    "SQLWhereFilter",
    "SubQueryReturnT",
    "WhereFilter",
    "WhereFilters",
    "transform_search_filter",
    "BaseIDModel",
    "BaseModel",
    "BaseModelT",
    "BaseSoftDeleteModel",
    "BaseSoftDeleteModelT",
    "BaseTimeStampedModel",
    "FieldEnumT",
    "M2MFilterConfig",
    "ModelAttribute",
    "ModelAttributeSequence",
    "ModelType",
    "SelectStatement",
    "SoftDeleteBaseIDModel",
    "SoftDeleteMixin",
    "SQLAlchemyModel",
    "TimeStampedBaseIDModel",
    "TimeStampedMixin",
    "ModelAutoSchema",
    "ModelAutoSchemaError",
    "ModelAutoSchemaT",
)
